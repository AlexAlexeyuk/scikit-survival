# AppVeyor.com is a Continuous Integration service to build and run tests under
# Windows

environment:
  # see https://www.appveyor.com/docs/build-environment/#python
  matrix:
    # cvxopt is only available for python <3.5
    # https://github.com/cvxopt/cvxopt/issues/94
    - TARGET_ARCH: "x64"
      CONDA_PY: "35"
      PY_CONDITION: "python >=3.5,<3.6"
      CONDA_INSTALL_LOCN: "C:\\Miniconda35-x64"
      NUMPY_VERSION: 1.12
      PANDAS_VERSION: 0.22
    - TARGET_ARCH: "x64"
      CONDA_PY: "36"
      PY_CONDITION: "python >=3.6"
      CONDA_INSTALL_LOCN: "C:\\Miniconda36-x64"
      NUMPY_VERSION: 1.13
      PANDAS_VERSION: 0.23
    - TARGET_ARCH: "x64"
      CONDA_PY: "36"
      PY_CONDITION: "python >=3.6"
      CONDA_INSTALL_LOCN: "C:\\Miniconda36-x64"
      NUMPY_VERSION: 1.14
      PANDAS_VERSION: 0.23

# We always use a 64-bit machine.
platform:
- x64

install:
  - cmd: set "OLDPATH=%PATH%"
  - cmd: set "PATH=%CONDA_INSTALL_LOCN%\\Scripts;%CONDA_INSTALL_LOCN%\\Library\\bin;%PATH%"
  - cmd: conda update --yes --quiet conda
  - cmd: set "PATH=%OLDPATH%"
  - cmd: call %CONDA_INSTALL_LOCN%\Scripts\activate.bat
  - cmd: conda config --set always_yes yes

  # Upgrade to the latest version of pip to avoid it displaying warnings
  # about it being out of date.
  - cmd: python -m pip install --disable-pip-version-check --user --upgrade "pip<10.0"

  # Install the build and runtime dependencies of the project.
  - cmd: conda install "%PY_CONDITION%" "pip<10" "mkl=2018.0.*" numpy=%NUMPY_VERSION% pandas=%PANDAS_VERSION% scipy numexpr ecos cython "scikit-learn<0.21"

  # Install scs from tarball
  - cmd: pip download --no-cache-dir --no-deps scs==1.2.7
  - cmd: python ci/appveyor/extract-archive.py scs-1.2.7.tar.gz
  - cmd: cd scs-1.2.7
  - cmd: python setup.py install
  - cmd: cd ..
  - cmd: rmdir scs-1.2.7 /s /q

  # Install remaining dependencies
  - cmd: pip install -r ci/appveyor/requirements_%CONDA_PY%.txt
  - cmd: conda list
  # Initialize the submodules
  - cmd: git submodule update --init --recursive
  # Create binary packages for the project.
  - cmd: python setup.py bdist_wheel bdist_wininst
  - ps: "ls dist"

  # Install the generated wheel package to test it
  - cmd: pip install --exists-action=w --pre --no-index --find-links dist/ scikit-survival
  - cmd: rmdir sksurv /s /q

test_script:
  - cmd: set "PYTHONWARNINGS=default"
  - cmd: py.test -m "not slow" -k "not test_breast_cancer_rbf_cvxopt" tests/

artifacts:
  # Archive the generated wheel package in the ci.appveyor.com build report.
  - path: dist\*

# Skip .NET project specific build phase.
build: off
